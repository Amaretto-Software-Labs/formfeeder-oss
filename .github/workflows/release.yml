name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

env:
  DOTNET_VERSION: '9.0.x'
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build:
    name: Build Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Determine version
      id: version
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION="${{ github.ref_name }}"
        fi
        echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
        echo "VERSION_NUMBER=${VERSION#v}" >> $GITHUB_OUTPUT

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore /p:Version=${{ steps.version.outputs.VERSION_NUMBER }}

    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal

    - name: Publish API
      run: |
        dotnet publish FormFeeder.Api/FormFeeder.Api.csproj \
          --configuration Release \
          --no-build \
          --output ./publish/api \
          /p:Version=${{ steps.version.outputs.VERSION_NUMBER }}

    - name: Create archives
      run: |
        cd publish/api
        tar czf ../../formfeeder-api-${{ steps.version.outputs.VERSION }}-linux-x64.tar.gz *
        zip -r ../../formfeeder-api-${{ steps.version.outputs.VERSION }}-linux-x64.zip *
        cd ../..

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-artifacts
        path: |
          formfeeder-api-*.tar.gz
          formfeeder-api-*.zip
        retention-days: 5

  docker:
    name: Build and Push Docker
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Determine version
      id: version
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION="${{ github.ref_name }}"
        fi
        echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
        echo "VERSION_NUMBER=${VERSION#v}" >> $GITHUB_OUTPUT

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=raw,value=latest
          type=raw,value=${{ steps.version.outputs.VERSION_NUMBER }}
          type=raw,value=${{ steps.version.outputs.VERSION }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./FormFeeder.Api
        file: ./FormFeeder.Api/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          VERSION=${{ steps.version.outputs.VERSION_NUMBER }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build, docker]
    if: github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: release-artifacts
        path: ./artifacts

    - name: Generate changelog
      id: changelog
      run: |
        echo "## What's Changed" > CHANGELOG.md
        git log --pretty=format:"* %s (%h)" $(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")..HEAD >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "## Docker" >> CHANGELOG.md
        echo "Pull the latest image from GitHub Container Registry:" >> CHANGELOG.md
        echo "\`\`\`bash" >> CHANGELOG.md
        echo "docker pull ghcr.io/${{ github.repository }}:${{ github.ref_name }}" >> CHANGELOG.md
        echo "\`\`\`" >> CHANGELOG.md

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        name: Release ${{ github.ref_name }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: ${{ contains(github.ref_name, '-') }}
        files: |
          artifacts/formfeeder-api-*.tar.gz
          artifacts/formfeeder-api-*.zip
        generate_release_notes: true